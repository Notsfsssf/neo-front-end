{"version":3,"sources":["API.ts","Home/Hello.tsx","Home/Article.tsx","MessageBoard.tsx","Home.tsx","SignIn.tsx","Admin/AdminArticleCreate.tsx","Admin/Admin.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["axiosx","axios","create","baseURL","useStyles","makeStyles","theme","createStyles","card","display","cardDetails","flex","bullet","margin","transform","title","fontSize","pos","marginBottom","cardGrid","padding","heroContent","backgroundColor","palette","background","paper","spacing","heroButtons","marginTop","cardMedia","width","Hello","props","classes","useState","data","setData","useEffect","a","API","get","response","f","listItem","map","article","Grid","item","xs","md","key","id","CardActionArea","component","href","Card","className","CardContent","Typography","variant","color","createTime","paragraph","summary","onClick","history","push","Hidden","xsDown","CardMedia","image","onPenBlankLink","url","window","open","hero","Container","maxWidth","align","gutterBottom","container","justify","Button","errorContainer","Fragment","length","textField","marginLeft","marginRight","root","inline","CCCopyright","Link","Date","getFullYear","useCreateCommentStyles","editor","button","CreateComment","undefined","content","name","email","articleId","parseInt","post","location","reload","handleChange","event","target","value","TextField","label","multiline","fullWidth","onChange","CommentList","comments","comment","ListItem","alignItems","ListItemAvatar","Avatar","substr","ListItemText","primary","secondary","Divider","List","Article","match","params","updateTime","userId","ReactMarkdown","require","Paper","source","escapeHtml","MessageBoard","menuButton","flexGrow","appBar","Home","jumpTo","AppBar","position","Toolbar","IconButton","edge","aria-label","CssBaseline","path","Copyright","body","common","white","flexDirection","avatar","main","form","submit","SignIn","setName","password","setPassword","status","header","alert","localStorage","setItem","action","method","noValidate","required","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Box","mt","fab","fabDelete","success","green","extendedIcon","flexWrap","dense","menu","AdminArticleCreate","patch","headers","getItem","showSnackBar","delete","message","horizontal","vertical","snackBar","setSnackBar","setArticle","Fab","Snackbar","ContentProps","autoHideDuration","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","Admin","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","text","index","ListItemIcon","noWrap","smUp","implementation","Drawer","anchor","direction","onClose","ModalProps","keepMounted","exact","outerTheme","createMuiTheme","orange","App","ThemeProvider","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d4763a64.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst localUrl=\"http://localhost:8080/api/\"\r\nconst remoteUrl=\"https://perol.me/api/\"\r\nconst axiosx = axios.create({\r\n    baseURL:remoteUrl,\r\n})\r\nexport default axiosx","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Card, CardActionArea,\r\n    CardActions,\r\n    CardContent, CardMedia,\r\n    Container,\r\n    createMuiTheme,\r\n    Grid, Hidden,\r\n    makeStyles,\r\n    Typography,\r\n    Theme,\r\n    createStyles\r\n} from \"@material-ui/core\";\r\nimport API from \"../API\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\nimport { ArticleBean } from \"./Article\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            display: 'flex',\r\n        },\r\n        cardDetails: {\r\n            flex: 1,\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n        cardGrid: {\r\n            padding: 30\r\n        },\r\n        heroContent: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            padding: theme.spacing(8, 0, 6),\r\n        },\r\n        heroButtons: {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n        cardMedia: {\r\n            width: 160,\r\n        },\r\n    }),\r\n)\r\n\r\n\r\nexport default function Hello(props: RouteComponentProps) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n\r\n        async function f() {\r\n            let response = await API.get(`/article`)\r\n            setData(response.data);\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n\r\n    function jumpTo(id: number | undefined) {\r\n        props.history.push(\"/article/\" + id)\r\n    }\r\n\r\n    const listItem = data.map((article: ArticleBean) =>\r\n        <Grid item xs={12} md={6} key={article.id}>\r\n            <CardActionArea component=\"a\" href={\"/article/\" + article.id}>\r\n                <Card className={classes.card}>\r\n                    <div className={classes.cardDetails}>\r\n                        <CardContent>\r\n                            <Typography component=\"h2\" variant=\"h5\">\r\n                                {article.title}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                                {article.createTime}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" paragraph>\r\n                                {article.summary}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle1\" color=\"primary\" onClick={() => jumpTo(article.id)}>\r\n                                Continue reading...\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </div>\r\n                    <Hidden xsDown>\r\n                        <CardMedia\r\n                            className={classes.cardMedia}\r\n                            image=\"https://source.unsplash.com/random\"\r\n                            title=\"Image title\"\r\n                        />\r\n                    </Hidden>\r\n                </Card>\r\n            </CardActionArea>\r\n        </Grid>\r\n    )\r\n    function onPenBlankLink(url: string) {\r\n        window.open(url)\r\n    }\r\n    const hero = <div className={classes.heroContent}>\r\n        <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                欢迎\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                这是我的个人主页，记录开发日常中所踩的坑,测试spring boot在开发环境上的配置需求.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => onPenBlankLink('https://github.com/Notsfsssf')}>\r\n                            前往我的 GITHUB 主页\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => onPenBlankLink('https://play.google.com/store/apps/developer?id=Perol_Notsf')}>\r\n                            下载我开发的 APP\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    </div>\r\n    const errorContainer = <>\r\n        <p>Spring boot挂掉了</p>\r\n    </>\r\n    return (\r\n        <React.Fragment>\r\n            {hero}\r\n            <Grid container spacing={4} className={classes.cardGrid}>\r\n                {data.length === 0 ? errorContainer : listItem}\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState, ComponentProps } from \"react\";\r\nimport { Card, Container, ListItemText, Typography, Link, Theme, List, ListItem, ListItemAvatar, Avatar, Divider, Paper, TextField, Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport API from \"../API\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(1),\r\n\r\n        },\r\n        container: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        root: {\r\n            width: '100%',\r\n\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        }\r\n\r\n    }));\r\n\r\ninterface RouterInfo {\r\n    id: string\r\n}\r\nexport interface CommentInfo {\r\n    id: string\r\n}\r\nexport interface ArticleProps extends RouteComponentProps<RouterInfo> {\r\n\r\n}\r\n\r\nexport class ArticleBean {\r\n    id: number | undefined\r\n    userId: number | undefined\r\n    title: string = \"\"\r\n    content: string = \"\"\r\n    summary: string = \"\"\r\n    updateTime: string = \"\"\r\n    createTime: string = \"\"\r\n}\r\nexport class CommentBean {\r\n    id: number | undefined\r\n    content: string | undefined\r\n    name: string | undefined\r\n    email: string | undefined\r\n    articleId: number | undefined\r\n    createTime: string | undefined\r\n}\r\nfunction CCCopyright() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://perol.me/\">\r\n                    Perol Website\r\n            </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'. Built with '}\r\n                <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                    Material-UI.\r\n            </Link>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                版权声明：本文为Perol原创文章，遵循\r\n            <Link color=\"inherit\" href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\">\r\n                    CC 4.0 by-sa\r\n            </Link>\r\n                版权协议，转载请附上原文出处链接和本声明。\r\n        </Typography>\r\n        </>\r\n    );\r\n}\r\nconst useCreateCommentStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n\r\n        textField: {\r\n\r\n        },\r\n        editor: {\r\n\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        }\r\n\r\n    }));\r\nexport function CreateComment(props: CommentInfo) {\r\n    const classes = useCreateCommentStyles();\r\n    const [data, setData] = useState<CommentBean>({\r\n        id: undefined,\r\n        content: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        createTime: \"\",\r\n        articleId: parseInt(props.id)\r\n    })\r\n    async function create() {\r\n        if (data.name && data.content && data.email) {\r\n            let response = await API.post('/comment', data)\r\n            window.location.reload(true)\r\n        }\r\n\r\n    }\r\n    const handleChange = (name: keyof CommentBean) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({ ...data, [name]: event.target.value });\r\n    };\r\n    function handleContent(value: string) {\r\n        setData({ ...data, ['content']: value });\r\n    }\r\n    return (<>\r\n        <Grid container >\r\n            <Grid item xs={12}>\r\n                <TextField label=\"Comment\" margin=\"normal\" multiline fullWidth\r\n                    variant=\"outlined\" value={data.content} className={classes.textField} onChange={handleChange('content')} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={data.name}\r\n                    onChange={handleChange('name')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextField\r\n                    id=\"outlined-email\"\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={data.email}\r\n                    onChange={handleChange('email')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={create}>\r\n                    评论\r\n      </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </>)\r\n}\r\nexport function CommentList(props: CommentInfo) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([])\r\n    useEffect(function () {\r\n        async function f() {\r\n            let response = await API.get(`/comment/` + props.id)\r\n\r\n            setData(response.data);\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n    const comments = data.map((comment: CommentBean) =>\r\n        <>\r\n            <ListItem alignItems=\"center\" key={comment.id}>\r\n                <ListItemAvatar>\r\n                    <Avatar >{typeof comment.name === \"string\" ? comment.name.substr(0, 1) : \"A\"}</Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={comment.name}\r\n                    secondary={\r\n                        <React.Fragment>\r\n\r\n                            {comment.content}\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n        </>\r\n    )\r\n    return (<>\r\n        <List className={classes.root}>\r\n            {data.length !== 0 ? comments : <>\r\n                Nobody here but us chickens\r\n            </>}\r\n        </List>\r\n    </>)\r\n}\r\nexport default function Article(props: ArticleProps) {\r\n    const classes = useStyles();\r\n    const id: string = props.match.params.id\r\n    const [data, setData] = useState<ArticleBean>({\r\n        content: \"\",\r\n        createTime: \"\",\r\n        id: undefined,\r\n        summary: \"\",\r\n        title: \"\",\r\n        updateTime: \"\",\r\n        userId: undefined\r\n    });\r\n    useEffect(function () {\r\n        async function f() {\r\n            let response = await API.get(`/article/` + id)\r\n\r\n            setData(response.data);\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n\r\n\r\n    const ReactMarkdown = require('react-markdown/with-html')\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container spacing={2} className={classes.container} >\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <ListItemText primary={data.title} secondary={data.createTime} />\r\n                        <ReactMarkdown\r\n                            source={data.content}\r\n                            escapeHtml={false}\r\n                        />\r\n                        {\r\n                            data.updateTime ? <ListItemText primary='修改于' secondary={data.updateTime} /> : <></>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CommentList id={id} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CreateComment id={id} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CCCopyright />\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { CommentList, CreateComment } from \"./Home/Article\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport { Theme, createStyles } from \"@material-ui/core\";\r\ninterface RouteInfo {\r\n}\r\nexport interface MessageBoardProps extends RouteComponentProps<RouteInfo> {\r\n\r\n}\r\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\r\n \r\n        root: {\r\n            padding: theme.spacing(2)\r\n        },\r\n  \r\n}));\r\nfunction MessageBoard(props: MessageBoardProps) {\r\n    const classes = useStyles();\r\n    const messageBoardId = \"999\"\r\n    return (<>\r\n        <Grid container className={classes.root}>\r\n            <Grid xs={12}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n        留言板\r\n      </Typography>\r\n            </Grid>\r\n            <CommentList id={messageBoardId} />\r\n            <CreateComment id={messageBoardId} />\r\n        </Grid>\r\n    </>)\r\n}\r\nexport default MessageBoard;","import {\r\n    AppBar,\r\n    Button,\r\n    createStyles,\r\n    CssBaseline,\r\n    IconButton,\r\n    makeStyles,\r\n    Theme,\r\n    Toolbar,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Route, RouteComponentProps, Switch, Redirect } from \"react-router-dom\";\r\nimport Hello from \"./Home/Hello\";\r\nimport Article from \"./Home/Article\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport MessageBoard from \"./MessageBoard\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        button: {\r\n            margin: theme.spacing(1)\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        appBar: {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        }\r\n    }),\r\n)\r\nexport default function Home(props: RouteComponentProps) {\r\n    const classes = useStyles();\r\n    function jumpTo(url:string) {\r\n        props.history.push('/'+url)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar position=\"static\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton onClick={()=>jumpTo('')} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Blog\r\n                    </Typography>\r\n                    <Button color=\"inherit\" onClick={()=>jumpTo('message')}>Message</Button>\r\n                    <Button color=\"inherit\" onClick={()=>jumpTo('signin')}>Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <CssBaseline />\r\n          <Switch>\r\n     \r\n            <Route path='/article/:id' component={Article} />\r\n            <Route path='/message' component={MessageBoard}/>\r\n            <Route  path='/' component={Hello} />\r\n            </Switch>\r\n     \r\n        </React.Fragment>\r\n    )\r\n\r\n}","import {\r\n    Avatar, Box, Button,\r\n    Checkbox,\r\n    Container,\r\n    CssBaseline,\r\n    FormControlLabel, Grid,\r\n    Link,\r\n    TextField, Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\r\nimport React, {useState} from \"react\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport API from \"./API\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\nexport function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Perol Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. Built with '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Material-UI.\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        '@global': {\r\n            body: {\r\n                backgroundColor: theme.palette.common.white,\r\n            },\r\n        },\r\n        paper: {\r\n            marginTop: theme.spacing(8),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n\r\nexport default function SignIn(props: RouteComponentProps) {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState<string>(\"perol\")\r\n    const [password, setPassword] = useState<string>(\"1122\")\r\n\r\n    async function onSubmit() {\r\n        const response = await API.post(\"/login\", {\r\n            \"name\": name,\r\n            \"password\": password\r\n        })\r\n        if (response.status === 200) {\r\n            const header = response.data\r\n            alert(header)\r\n            localStorage.setItem(\"authorization\", header);\r\n            props.history.push(\"/admin\")\r\n        } else alert(response.status)\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form action=\"/login\" className={classes.form} method=\"post\" noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        value={name}\r\n                        onChange={(event => setName(event.target.value))}\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        value={password}\r\n                        onChange={(event => setPassword(event.target.value))}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        onClick={onSubmit}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ArticleBean, ArticleProps} from \"../Home/Article\";\r\nimport API from \"../API\";\r\nimport {Fab, Grid, Snackbar, TextField, Theme} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Editor from 'for-editor'\r\nimport {SnackbarOrigin} from \"@material-ui/core/Snackbar\";\r\nimport {green} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        fab: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        fabDelete: {\r\n            margin: theme.spacing(1),\r\n\r\n        },\r\n        success: {\r\n            backgroundColor: green[600],\r\n        },\r\n        extendedIcon: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        dense: {\r\n            marginTop: 16,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n\r\n    }),\r\n);\r\n\r\nexport interface SnackBarState extends SnackbarOrigin {\r\n    message: string;\r\n    open: boolean;\r\n}\r\n\r\nexport default function AdminArticleCreate(props: ArticleProps) {\r\n    const classes = useStyles();\r\n    const id = props.match.params.id\r\n\r\n    async function postArticle() {\r\n        let url = '/article'\r\n        if (typeof id === 'string') {\r\n            url = url + '/' + id\r\n            const response = await API.patch(url, article,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": localStorage.getItem(\"authorization\")\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            const response = await API.post(url, article,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": localStorage.getItem(\"authorization\")\r\n                    }\r\n                })\r\n\r\n        }\r\n        showSnackBar('ok')\r\n    }\r\n    async function deleteArticle(){\r\n        const response = await API.delete('/article/'+id,{\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"authorization\")\r\n            }\r\n        })\r\n        showSnackBar('ok')\r\n    }\r\n    const [snackBar, setSnackBar] = useState<SnackBarState>({\r\n        message: \"\",\r\n        open: false,\r\n        horizontal: \"left\",\r\n        vertical: \"bottom\"\r\n    })\r\n    const [article, setArticle] = useState<ArticleBean>({\r\n        content: \"\",\r\n        createTime: \"\",\r\n        id: undefined,\r\n        summary: \"\",\r\n        title: \"\",\r\n        updateTime: \"\",\r\n        userId: undefined\r\n    })\r\n    function showSnackBar(message:string){\r\n        setSnackBar({...snackBar,['message']:message,['open']:true})\r\n    }\r\n    useEffect(() => {\r\n        async function f() {\r\n            let response = await API.get(`/article/` + id)\r\n            setArticle(response.data);\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            f()\r\n        }\r\n    }, [])\r\n    const handleChange = (name: keyof ArticleBean) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setArticle({...article, [name]: event.target.value});\r\n    };\r\n\r\n    function handleContent(value: string) {\r\n        setArticle({...article, ['content']: value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"Title\"\r\n                            label=\"Title\"\r\n                            value={article.title}\r\n                            onChange={handleChange('title')}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"Summary\"\r\n                            label=\"Summary\"\r\n                            value={article.summary}\r\n                            onChange={handleChange('summary')}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                        />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Editor value={article.content} onChange={handleContent}/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={postArticle}>\r\n                        <NavigationIcon className={classes.extendedIcon}/>\r\n                        {\r\n                            typeof id === 'string' ? <p>Patch</p> : <p>Post</p>\r\n                        }\r\n                    </Fab>\r\n                </Grid>\r\n                {\r\n                    typeof id === 'string' ? <Grid item xs={2}>\r\n                        <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fabDelete} onClick={deleteArticle}>\r\n                            <DeleteIcon className={classes.extendedIcon}/>\r\n                            Delete\r\n                        </Fab>\r\n                    </Grid> : <></>\r\n                }\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackBar.open}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                autoHideDuration={2}\r\n                className={classes.success}\r\n                message={<span id=\"message-id\">{snackBar.message}</span>}\r\n            />\r\n        </>\r\n    )\r\n}","import Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles, useTheme, Theme, createStyles} from '@material-ui/core/styles';\r\nimport {AdminArticle} from \"./AdminArticle\";\r\nimport React from 'react';\r\nimport {AppBar, CssBaseline, Switch} from \"@material-ui/core\";\r\nimport {Route} from 'react-router-dom';\r\nimport AdminArticleCreate from \"./AdminArticleCreate\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    container?: Element;\r\n}\r\n\r\nexport default function Admin(props: ResponsiveDrawerProps) {\r\n    const {container} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider/>\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Admin\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                <Route exact path='/admin/' component={AdminArticleCreate}/>\r\n                <Route path='/admin/article/:id' component={AdminArticleCreate}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Home from \"./Home\";\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\nimport Article from \"./Home/Article\";\r\nimport SignIn from \"./SignIn\";\r\nimport ErrorPage from \"./ErrorPage\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { green, orange, purple } from \"@material-ui/core/colors\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport MessageBoard from './MessageBoard';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\nconst outerTheme = createMuiTheme({\r\n    palette: {\r\n        secondary: {\r\n            main: orange[500],\r\n        },\r\n    },\r\n});\r\nconst App: React.FC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <ThemeProvider theme={outerTheme}>\r\n                <Switch>\r\n                    <Route path='/signin' component={SignIn} />\r\n                    <Route path='/admin' component={Admin} />\r\n               \r\n                    <Route path='/' component={Home} />\r\n                \r\n                   \r\n                </Switch>\r\n            </ThemeProvider>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport 'typeface-roboto';\r\nReactDOM.render(<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}