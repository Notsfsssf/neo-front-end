{"version":3,"sources":["API.ts","Home/Hello.tsx","Home/Article.tsx","MessageBoard.tsx","Home.tsx","SignIn.tsx","Admin/AdminArticleCreate.tsx","Admin/Admin.tsx","SignUp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["axiosx","axios","create","baseURL","useStyles","makeStyles","theme","createStyles","card","display","cardDetails","flex","root","width","backgroundColor","palette","background","paper","bullet","margin","transform","title","fontSize","pos","marginBottom","cardGrid","padding","heroContent","spacing","heroButtons","marginTop","cardMedia","Hello","props","classes","useState","data","setData","requestError","setRequestError","useEffect","a","API","get","response","f","listItem","map","article","ListItem","button","key","id","ListItemText","onClick","history","push","primary","secondary","Fragment","Typography","component","variant","color","updateTime","summary","onPenBlankLink","url","window","open","hero","className","Container","maxWidth","align","gutterBottom","paragraph","Grid","container","justify","item","Button","errorContainer","empty","xs","List","length","CodeCon","language","style","dark","value","textField","marginLeft","marginRight","inline","CCCopyright","Link","href","Date","getFullYear","useCreateCommentStyles","editor","CreateComment","undefined","content","name","email","createTime","articleId","parseInt","post","location","reload","handleChange","event","target","TextField","label","multiline","fullWidth","onChange","md","CommentList","comments","comment","alignItems","ListItemAvatar","Avatar","substr","Divider","Article","match","params","userId","ReactMarkdown","require","Paper","source","escapeHtml","renderers","code","MessageBoard","menuButton","flexGrow","appBar","Home","im","setIm","jumpTo","localStorage","getItem","headers","Authorization","status","AppBar","position","Toolbar","IconButton","edge","aria-label","CssBaseline","path","Copyright","body","common","white","flexDirection","avatar","main","form","submit","SignIn","setName","password","setPassword","header","alert","setItem","action","method","noValidate","required","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Box","mt","fab","fabDelete","success","green","extendedIcon","flexWrap","dense","menu","AdminArticleCreate","patch","showSnackBar","delete","message","horizontal","vertical","snackBar","setSnackBar","setArticle","Fab","Snackbar","ContentProps","autoHideDuration","drawer","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","Admin","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","text","index","ListItemIcon","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","ModalProps","keepMounted","xsDown","exact","SignUp","setEmail","tryToSignUp","outerTheme","createMuiTheme","orange","App","ThemeProvider","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1b89234.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst localUrl=\"http://localhost:8080/api/\"\r\nconst remoteUrl=\"https://perol.fun/api/\"\r\nconst axiosx = axios.create({\r\n    baseURL:remoteUrl,\r\n})\r\nexport default axiosx","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Card, CardActionArea,\r\n    CardContent, CardMedia,\r\n    Container,\r\n    Grid, Hidden,\r\n    makeStyles,\r\n    Typography,\r\n    Theme,\r\n    createStyles,\r\n    ListItem,\r\n    List,\r\n    ListItemText,\r\n    Divider\r\n} from \"@material-ui/core\";\r\nimport API from \"../API\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { ArticleBean } from \"./Article\";\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            display: 'flex',\r\n        },\r\n        cardDetails: {\r\n            flex: 1,\r\n        },\r\n        root: {\r\n            width: '100%',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        bullet: {\r\n            display: 'inline-block',\r\n            margin: '0 2px',\r\n            transform: 'scale(0.8)',\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n        cardGrid: {\r\n            padding: 30\r\n        },\r\n        heroContent: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            padding: theme.spacing(8, 0, 6),\r\n        },\r\n        heroButtons: {\r\n            marginTop: theme.spacing(4),\r\n        },\r\n        cardMedia: {\r\n            width: 160,\r\n        },\r\n    }),\r\n)\r\n\r\n\r\nexport default function Hello(props: RouteComponentProps) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([]);\r\n    const [requestError, setRequestError] = useState(false)\r\n    useEffect(() => {\r\n\r\n        async function f() {\r\n            try {\r\n                let response = await API.get(`/article`)\r\n                setData(response.data);\r\n            } catch (e) {\r\n                setRequestError(true)\r\n            }\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n\r\n    function jumpTo(id: number | undefined) {\r\n        props.history.push(\"/article/\" + id)\r\n    }\r\n\r\n    const listItem = data.map((article: ArticleBean) =>\r\n        <ListItem button key={article.id}>\r\n            <ListItemText\r\n            onClick={()=>jumpTo(article.id)}\r\n                primary={article.title}\r\n                secondary={\r\n                    <React.Fragment>\r\n                        <Typography\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"textPrimary\"\r\n                        >\r\n                            {article.updateTime}\r\n                        </Typography>\r\n                        {article.summary}\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </ListItem>\r\n    )\r\n    function onPenBlankLink(url: string) {\r\n        window.open(url)\r\n    }\r\n    const hero = <div className={classes.heroContent}>\r\n        <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                欢迎\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                这是Perol_Notsf的个人主页，记录开发日常中所踩的坑,测试spring boot在开发环境上的配置需求.\r\n            </Typography>\r\n            <div className={classes.heroButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => onPenBlankLink('https://github.com/Notsfsssf')}>\r\n                            前往我的 GITHUB 主页\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => onPenBlankLink('https://notsfsssf.github.io/Pix-EzViewer/')}>\r\n                            下载我开发的 APP\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </Container>\r\n    </div>\r\n    const errorContainer = <>\r\n        <p>Spring boot挂掉了</p>\r\n    </>\r\n    const empty = <>\r\n        Blank\r\n</>\r\n    return (\r\n        <React.Fragment>\r\n            {hero}\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <List className={classes.root}>\r\n                        {requestError ? errorContainer : data.length === 0 ? empty : listItem}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect, useState, ComponentProps } from \"react\";\r\nimport { Card, Container, ListItemText, Typography, Link, Theme, List, ListItem, ListItemAvatar, Avatar, Divider, Paper, TextField, Button, Grid } from \"@material-ui/core\";\r\nimport { makeStyles, createStyles } from \"@material-ui/styles\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport API from \"../API\";\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco, dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\ninterface CodeProps{\r\n    value:string,\r\n    language:string\r\n}\r\nfunction CodeCon(props:CodeProps){\r\n    return (\r\n        <SyntaxHighlighter language={props.language} style={dark}>\r\n          {props.value}\r\n        </SyntaxHighlighter>\r\n      );\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(1),\r\n\r\n        },\r\n        container: {\r\n            padding: theme.spacing(2)\r\n        },\r\n        root: {\r\n            width: '100%',\r\n\r\n        },\r\n        inline: {\r\n            display: 'inline',\r\n        }\r\n\r\n    }));\r\n\r\ninterface RouterInfo {\r\n    id: string\r\n}\r\nexport interface CommentInfo {\r\n    id: string\r\n}\r\nexport interface ArticleProps extends RouteComponentProps<RouterInfo> {\r\n\r\n}\r\n\r\nexport class ArticleBean {\r\n    id: number | undefined\r\n    userId: number | undefined\r\n    title: string = \"\"\r\n    content: string = \"\"\r\n    summary: string = \"\"\r\n    updateTime: string = \"\"\r\n    createTime: string = \"\"\r\n}\r\nexport class CommentBean {\r\n    id: number | undefined\r\n    content: string | undefined\r\n    name: string | undefined\r\n    email: string | undefined\r\n    articleId: number | undefined\r\n    createTime: string | undefined\r\n}\r\nfunction CCCopyright() {\r\n    return (\r\n        <>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://perol.fun/\">\r\n                    Perol Website\r\n            </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'. Built with '}\r\n                <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                    Material-UI.\r\n            </Link>\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                版权声明：本文为Perol原创文章，遵循\r\n            <Link color=\"inherit\" href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\">\r\n                    CC 4.0 by-sa\r\n            </Link>\r\n                版权协议，转载请附上原文出处链接和本声明。\r\n        </Typography>\r\n        </>\r\n    );\r\n}\r\nconst useCreateCommentStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n\r\n        textField: {\r\n\r\n        },\r\n        editor: {\r\n\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        }\r\n\r\n    }));\r\nexport function CreateComment(props: CommentInfo) {\r\n    const classes = useCreateCommentStyles();\r\n    const [data, setData] = useState<CommentBean>({\r\n        id: undefined,\r\n        content: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        createTime: \"\",\r\n        articleId: parseInt(props.id)\r\n    })\r\n    async function create() {\r\n        if (data.name && data.content && data.email) {\r\n            let response = await API.post('/comment', data)\r\n            window.location.reload(true)\r\n        }\r\n\r\n    }\r\n    const handleChange = (name: keyof CommentBean) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setData({ ...data, [name]: event.target.value });\r\n    };\r\n    function handleContent(value: string) {\r\n        setData({ ...data, ['content']: value });\r\n    }\r\n    return (<>\r\n        <Grid container >\r\n            <Grid item xs={12}>\r\n                <TextField label=\"Comment\" margin=\"normal\" multiline fullWidth\r\n                    variant=\"outlined\" value={data.content} className={classes.textField} onChange={handleChange('content')} />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={data.name}\r\n                    onChange={handleChange('name')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <TextField\r\n                    id=\"outlined-email\"\r\n                    fullWidth\r\n                    label=\"Email\"\r\n                    className={classes.textField}\r\n                    value={data.email}\r\n                    onChange={handleChange('email')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={create}>\r\n                    评论\r\n      </Button>\r\n            </Grid>\r\n        </Grid>\r\n    </>)\r\n}\r\nexport function CommentList(props: CommentInfo) {\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([])\r\n    useEffect(function () {\r\n        async function f() {\r\n            let response = await API.get(`/comment/` + props.id)\r\n\r\n            setData(response.data);\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n    const comments = data.map((comment: CommentBean) =>\r\n        <>\r\n            <ListItem alignItems=\"center\" key={comment.id}>\r\n                <ListItemAvatar>\r\n                    <Avatar >{typeof comment.name === \"string\" ? comment.name.substr(0, 1) : \"A\"}</Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={comment.name}\r\n                    secondary={\r\n                        <React.Fragment>\r\n\r\n                            {comment.content}\r\n                        </React.Fragment>\r\n                    }\r\n                />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\" />\r\n        </>\r\n    )\r\n    return (<>\r\n        <List className={classes.root}>\r\n            {data.length !== 0 ? comments : <>\r\n                Nobody here but us chickens\r\n            </>}\r\n        </List>\r\n    </>)\r\n}\r\nexport default function Article(props: ArticleProps) {\r\n    const classes = useStyles();\r\n    const id: string = props.match.params.id\r\n    const [data, setData] = useState<ArticleBean>({\r\n        content: \"\",\r\n        createTime: \"\",\r\n        id: undefined,\r\n        summary: \"\",\r\n        title: \"\",\r\n        updateTime: \"\",\r\n        userId: undefined\r\n    });\r\n    useEffect(function () {\r\n        async function f() {\r\n            let response = await API.get(`/article/` + id)\r\n\r\n            setData(response.data);\r\n        }\r\n\r\n        f()\r\n    }, [])\r\n\r\n\r\n    const ReactMarkdown = require('react-markdown')\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Grid container spacing={2} className={classes.container} >\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <ListItemText primary={data.title} secondary={data.createTime} />\r\n                        <ReactMarkdown\r\n                            source={data.content}\r\n                            escapeHtml={false}\r\n                            renderers={{\r\n                               code:CodeCon\r\n                            }}\r\n                        />\r\n                        {\r\n                            data.updateTime ? <ListItemText primary='修改于' secondary={data.updateTime} /> : <></>\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CommentList id={id} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CreateComment id={id} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <CCCopyright />\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { CommentList, CreateComment } from \"./Home/Article\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport { Theme, createStyles } from \"@material-ui/core\";\r\ninterface RouteInfo {\r\n}\r\nexport interface MessageBoardProps extends RouteComponentProps<RouteInfo> {\r\n\r\n}\r\nconst useStyles = makeStyles((theme:Theme)=>createStyles({\r\n \r\n        root: {\r\n            padding: theme.spacing(2)\r\n        },\r\n  \r\n}));\r\nfunction MessageBoard(props: MessageBoardProps) {\r\n    const classes = useStyles();\r\n    const messageBoardId = \"999\"\r\n    return (<>\r\n        <Grid container className={classes.root}>\r\n            <Grid xs={12}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n        留言板\r\n      </Typography>\r\n            </Grid>\r\n            <CommentList id={messageBoardId} />\r\n            <CreateComment id={messageBoardId} />\r\n        </Grid>\r\n    </>)\r\n}\r\nexport default MessageBoard;","import {\r\n  AppBar,\r\n  Button,\r\n  createStyles,\r\n  CssBaseline,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Route, RouteComponentProps, Switch, Redirect } from \"react-router-dom\";\r\nimport Hello from \"./Home/Hello\";\r\nimport Article from \"./Home/Article\";\r\nimport NotFoundPage from \"./NotFoundPage\";\r\nimport MessageBoard from \"./MessageBoard\";\r\nimport API from \"./API\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    button: {\r\n      margin: theme.spacing(1)\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n      flexGrow: 1\r\n    },\r\n    appBar: {\r\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\r\n    }\r\n  })\r\n);\r\n\r\nexport default function Home(props: RouteComponentProps) {\r\n  const classes = useStyles();\r\n  const [im, setIm] = useState(undefined);\r\n  function jumpTo(url: string) {\r\n    props.history.push(\"/\" + url);\r\n  }\r\n  useEffect(() => {\r\n    const f = async () => {\r\n      const au = localStorage.getItem(\"authorization\");\r\n      if (au) {\r\n        const response = await API.get(\"/whoami\", {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"authorization\")\r\n          }\r\n        });\r\n        if (response.status === 200) setIm(response.data);\r\n      }\r\n    };\r\n    f();\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={() => jumpTo(\"\")}\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Blog\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={() => jumpTo(\"message\")}>\r\n            Message\r\n          </Button>\r\n          <Button color=\"inherit\" onClick={() => jumpTo(\"signin\")}>\r\n            {im ? im : <p>Login</p>}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <CssBaseline />\r\n      <Switch>\r\n        <Route path=\"/article/:id\" component={Article} />\r\n        <Route path=\"/message\" component={MessageBoard} />\r\n        <Route path=\"/\" component={Hello} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import {\r\n    Avatar, Box, Button,\r\n    Checkbox,\r\n    Container,\r\n    CssBaseline,\r\n    FormControlLabel, Grid,\r\n    Link,\r\n    TextField, Theme,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\r\nimport React, {useState} from \"react\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport API from \"./API\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\nexport function Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Perol Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'. Built with '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Material-UI.\r\n            </Link>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        '@global': {\r\n            body: {\r\n                backgroundColor: theme.palette.common.white,\r\n            },\r\n        },\r\n        paper: {\r\n            marginTop: theme.spacing(8),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n\r\nexport default function SignIn(props: RouteComponentProps) {\r\n    const classes = useStyles();\r\n    const [name, setName] = useState<string>(\"perol\")\r\n    const [password, setPassword] = useState<string>(\"1122\")\r\n\r\n    async function onSubmit() {\r\n        const response = await API.post(\"/login\", {\r\n            \"name\": name,\r\n            \"password\": password\r\n        })\r\n        if (response.status === 200) {\r\n            const header = response.data\r\n            alert(header)\r\n            localStorage.setItem(\"authorization\", header);\r\n            props.history.push(\"/admin\")\r\n        } else alert(response.status)\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline/>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form action=\"/login\" className={classes.form} method=\"post\" noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        value={name}\r\n                        onChange={(event => setName(event.target.value))}\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        value={password}\r\n                        onChange={(event => setPassword(event.target.value))}\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\"/>}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        onClick={onSubmit}\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright/>\r\n            </Box>\r\n        </Container>\r\n    )\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {ArticleBean, ArticleProps} from \"../Home/Article\";\r\nimport API from \"../API\";\r\nimport {Fab, Grid, Snackbar, TextField, Theme} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Editor from 'for-editor'\r\nimport {SnackbarOrigin} from \"@material-ui/core/Snackbar\";\r\nimport {green} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        fab: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        fabDelete: {\r\n            margin: theme.spacing(1),\r\n\r\n        },\r\n        success: {\r\n            backgroundColor: green[600],\r\n        },\r\n        extendedIcon: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        dense: {\r\n            marginTop: 16,\r\n        },\r\n        menu: {\r\n            width: 200,\r\n        },\r\n\r\n    }),\r\n);\r\n\r\nexport interface SnackBarState extends SnackbarOrigin {\r\n    message: string;\r\n    open: boolean;\r\n}\r\n\r\nexport default function AdminArticleCreate(props: ArticleProps) {\r\n    const classes = useStyles();\r\n    const id = props.match.params.id\r\n\r\n    async function postArticle() {\r\n        let url = '/article'\r\n        if (typeof id === 'string') {\r\n            url = url + '/' + id\r\n            const response = await API.patch(url, article,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": localStorage.getItem(\"authorization\")\r\n                    }\r\n                })\r\n\r\n        } else {\r\n            const response = await API.post(url, article,\r\n                {\r\n                    headers: {\r\n                        \"Authorization\": localStorage.getItem(\"authorization\")\r\n                    }\r\n                })\r\n\r\n        }\r\n        showSnackBar('ok')\r\n    }\r\n    async function deleteArticle(){\r\n        const response = await API.delete('/article/'+id,{\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"authorization\")\r\n            }\r\n        })\r\n        showSnackBar('ok')\r\n    }\r\n    const [snackBar, setSnackBar] = useState<SnackBarState>({\r\n        message: \"\",\r\n        open: false,\r\n        horizontal: \"left\",\r\n        vertical: \"bottom\"\r\n    })\r\n    const [article, setArticle] = useState<ArticleBean>({\r\n        content: \"\",\r\n        createTime: \"\",\r\n        id: undefined,\r\n        summary: \"\",\r\n        title: \"\",\r\n        updateTime: \"\",\r\n        userId: undefined\r\n    })\r\n    function showSnackBar(message:string){\r\n        setSnackBar({...snackBar,['message']:message,['open']:true})\r\n    }\r\n    useEffect(() => {\r\n        async function f() {\r\n            let response = await API.get(`/article/` + id)\r\n            setArticle(response.data);\r\n        }\r\n\r\n        if (typeof id === 'string') {\r\n            f()\r\n        }\r\n    }, [])\r\n    const handleChange = (name: keyof ArticleBean) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setArticle({...article, [name]: event.target.value});\r\n    };\r\n\r\n    function handleContent(value: string) {\r\n        setArticle({...article, ['content']: value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <form noValidate autoComplete=\"off\">\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"Title\"\r\n                            label=\"Title\"\r\n                            value={article.title}\r\n                            onChange={handleChange('title')}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"Summary\"\r\n                            label=\"Summary\"\r\n                            value={article.summary}\r\n                            onChange={handleChange('summary')}\r\n                            margin=\"normal\"\r\n                            variant=\"filled\"\r\n                        />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Editor value={article.content} onChange={handleContent}/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={postArticle}>\r\n                        <NavigationIcon className={classes.extendedIcon}/>\r\n                        {\r\n                            typeof id === 'string' ? <p>Patch</p> : <p>Post</p>\r\n                        }\r\n                    </Fab>\r\n                </Grid>\r\n                {\r\n                    typeof id === 'string' ? <Grid item xs={2}>\r\n                        <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fabDelete} onClick={deleteArticle}>\r\n                            <DeleteIcon className={classes.extendedIcon}/>\r\n                            Delete\r\n                        </Fab>\r\n                    </Grid> : <></>\r\n                }\r\n            </Grid>\r\n            <Snackbar\r\n                open={snackBar.open}\r\n                ContentProps={{\r\n                    'aria-describedby': 'message-id',\r\n                }}\r\n                autoHideDuration={2}\r\n                className={classes.success}\r\n                message={<span id=\"message-id\">{snackBar.message}</span>}\r\n            />\r\n        </>\r\n    )\r\n}","import Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles, useTheme, Theme, createStyles} from '@material-ui/core/styles';\r\nimport {AdminArticle} from \"./AdminArticle\";\r\nimport React from 'react';\r\nimport {AppBar, CssBaseline, Switch} from \"@material-ui/core\";\r\nimport {Route} from 'react-router-dom';\r\nimport AdminArticleCreate from \"./AdminArticleCreate\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n        },\r\n        drawer: {\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n        },\r\n        appBar: {\r\n            marginLeft: drawerWidth,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'none',\r\n            },\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n        drawerPaper: {\r\n            width: drawerWidth,\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(3),\r\n        },\r\n    }),\r\n);\r\n\r\ninterface ResponsiveDrawerProps {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    container?: Element;\r\n}\r\n\r\nexport default function Admin(props: ResponsiveDrawerProps) {\r\n    const {container} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar}/>\r\n            <Divider/>\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider/>\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem button key={text}>\r\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                        <ListItemText primary={text}/>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Admin\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar}/>\r\n                <Route exact path='/admin/' component={AdminArticleCreate}/>\r\n                <Route path='/admin/article/:id' component={AdminArticleCreate}/>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport API from \"./API\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignUp(props: RouteComponentProps) {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const tryToSignUp = async () => {\r\n    const response = await API.post(\"/user\", {\r\n      \"name\": name,\r\n      \"password\": password,\r\n      \"email\": email\r\n    });\r\n    if (response.status === 200) {\r\n      props.history.push(\"/siginin\");\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                name=\"Name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                \r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setPassword(event.target.value);\r\n                }}\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              1\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            onClick={tryToSignUp}\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport SignIn from \"./SignIn\";\r\nimport Admin from \"./Admin/Admin\";\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { orange } from \"@material-ui/core/colors\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport SignUp from \"./SignUp\";\r\n\r\nconst outerTheme = createMuiTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: orange[500]\r\n    }\r\n  }\r\n});\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <ThemeProvider theme={outerTheme}>\r\n        <Switch>\r\n          <Route path=\"/signup\" component={SignUp} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n          <Route path=\"/admin\" component={Admin} />\r\n          <Route path=\"/\" component={Home} />\r\n        </Switch>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"typeface-roboto\";\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}